/// Program Lshape_Steady.edp : resolution of the unsteady heat equation for the basic StabFem example
include "Macros_StabFem.edp";

// reading mesh
mesh th = readmesh("mesh.msh");

// Input parameters of the freefem program  : here a single parameter is needed, the frequency.
real omega;
cout << "Enter the frequency : " << endl;
cin >> omega;
cout << "### Frequency omega = " << omega << endl;

// Problem resolution
fespace Vh(th,P1);
Vh<complex> uC,vC;
real cpu=clock();
solve PoissonU(uC,vC,solver=LU)=int2d(th)(dx(uC)*dx(vC) + dy(uC)*dy(vC)) - int2d(th)(1i*omega*uC*vC)+on(1,uC=1);

Vh normgradUC = sqrt(abs(dx(uC))^2+abs(dy(uC))^2);
Vh normUC = abs(uC);

// Writing the data in a .ff2m file
{ 
	ofstream file("Heat_unsteady.ff2m"); 
    file << "### Data generated by Freefem++ ; " << endl;
    file << "Temperature field in a L-shaped region ; Unsteady conduction with harmonic forcing at boundaries" << endl;
    file << "Format : " << endl;
	file << "real omega P1c Tc P1 normTc" << endl << endl ; 
    file << omega << endl ;
	for (int j=0;j<uC[].n ; j++)
		file << real(uC[][j]) << endl << imag(uC[][j]) << endl;
    file << endl;
    for (int j=0;j<uC[].n ; j++)
		file << normUC[][j]  << endl;
}
